int bfsConnectedComponents(boolean[][] matrix) {

        boolean[] visited = new boolean[matrix.length];
        LinkedList<Integer> queue = new LinkedList<>();
        int componentsCount = 0;

        for (int startVertex = 0; startVertex < matrix.length; startVertex++) {
            if (!visited[startVertex]) {
                visited[startVertex] = true;
                queue.add(startVertex);
                componentsCount++;
                while (queue.size() > 0) {
                    int currentVertex = queue.element();
                    queue.poll();
                    visited[currentVertex] = true;
                    for (int nextVertex = 0; nextVertex < matrix.length; nextVertex++) {
                        if (matrix[currentVertex][nextVertex] && !visited[nextVertex]) {
                            visited[nextVertex] = true;
                            queue.add(nextVertex);
                        }
                    }
                }
            }
        }

        return componentsCount;
    }